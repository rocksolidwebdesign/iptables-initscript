============================
SysV Initscript for Iptables
============================

Install your iptables firewall on startup as a service.

A simple, sane, standard way to configure your iptables firewall
by using a simple rules script like ``/etc/iptables/up.rules``

I wanted a way to easily use e.g.::

    iptables-restore < /etc/iptables.rules

but in a startup script, so here it is.

Installation
============

Just run the handy install script::

    sudo ./install.sh

Or to get rid of it, the uninstall script::

    sudo ./uninstall.sh

What You Get
------------

This will install a standard "init script" style shell script to::

    /etc/init.d/iptables

meaning you can run::

    sudo service iptables start

Which simply reads loads your rules from::

    /etc/iptables/up.rules

If  you want  to  change your  firewall settings  then  just change  the
``up.rules`` file, reload the firewall with::

    sudo service iptables force-reload

and your  new changes should  be in  effect. You can check them by using::

    sudo service iptables status

Service Commands
================

Here are  the commands that ``service iptables`` accepts

* ``start`` will  load in the  current settings  from the backup  if one
  exists or from the ``up.rules`` file.

* ``stop`` will  backup the current  settings to the backup  rules file,
  ``saved.rules``,  and then  remove  all current  rules  and reset  the
  firewall back  to allowing  everything, in other  words back  to being
  "turned off" as far as firewalls go.

* ``restart`` really  does nothing  useful, if you  want to  change your
  firewall settings, what you want is actually ``force-reload``

* ``save`` just backs  up the current settings these  settings will then
  be loaded the next timt that ``start`` is run

* ``reset``  saves  the  current  settings but  resets  all  the  packet
  counters back to zero

* ``force-reload`` will  load fresh rules  from the primary  rules file,
  ``up.rules``, and delete the current backup.

* ``lock`` does nothing, maybe it should? I dunno.

* ``status`` is just an alias for ``iptables -vL``

The Example Rules Files
=======================

In your ``/etc/iptables`` folder you will find a few example rules files.
Here's a list of what they are and what they do.

* ``ssh.rules`` shows you how to open up  just the SSH port and just for
  your IP

* ``webserver.rules`` shows how to use multiport syntax and shows how to
  open ports for any IP

* ``flyspray.rules`` basically  prevents people  from trying  to connect
  too many times too fast, like flies smacking against a window. Setting
  limits  like  this  helps  prevent  bot  attacks.  This  was  actually
  generated by ``flyspray.sh`` which has  all the explantions of how and
  why these rules work
